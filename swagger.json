{
  "swagger": "2.0",
  "info": {
    "title": "PixelDrain",
    "version": "public beta"
  },
  "host": "sia.pixeldrain.com",
  "basePath": "/api",
  "schemes": [
    "https"
  ],
  "tags": [{
      "name": "file",
      "description": "File Methods"
    },
    {
      "name": "list",
      "description": "List Methods"
    }
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json",
    "text/plain"
  ],
  "paths": {
    "/file": {
      "post": {
        "tags": [
          "file"
        ],
        "summary": "Upload a file.",
        "description": "Upload a file.",
        "operationId": "uploadFile",
        "consumes": [
          "multipart/form-data"
        ],
        "parameters": [{
            "name": "file",
            "type": "file",
            "in": "formData",
            "required": true,
            "description": "Multipart file to upload"
          },
          {
            "name": "name",
            "type": "string",
            "in": "formData",
            "description": "Name of the file to upload",
            "default": "Name of file param"
          },
          {
            "name": "description",
            "type": "string",
            "in": "formData",
            "description": "Description of the file",
            "default": "Pixeldrain File"
          }
        ],
        "responses": {
          "201": {
            "description": "File is uploaded",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "example": true
                },
                "id": {
                  "type": "string",
                  "description": "ID of the newly uploaded file",
                  "example": "abc123"
                }
              }
            }
          },
          "413": {
            "description": "Payload Too Large",
            "schema": {
              "$ref": "#/definitions/StandardError"
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "$ref": "#/definitions/StandardError"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/StandardError"
            }
          }
        }
      }
    },
    "/file/{id}": {
      "get": {
        "tags": [
          "file"
        ],
        "summary": "Download a file.",
        "description": "Returns the full file associated with the ID. Supports byte range requests.\n",
        "operationId": "downloadFile",
        "produces": [
          "application/octet-stream",
          "application/json"
        ],
        "parameters": [{
          "name": "id",
          "type": "string",
          "in": "path",
          "required": true,
          "description": "ID of the file to request"
        }],
        "responses": {
          "200": {
            "description": "A file output stream.",
            "schema": {
              "type": "file"
            }
          },
          "default": {
            "description": "Error Response",
            "schema": {
              "$ref": "#/definitions/StandardError"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "file"
        ],
        "summary": "Deletes a file.",
        "description": "Deletes a file. Only works when the users owns the file.",
        "operationId": "deleteFile",
        "parameters": [{
          "name": "id",
          "type": "string",
          "in": "path",
          "required": true,
          "description": "ID of the file to request"
        }],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "example": true
                },
                "value": {
                  "type": "string",
                  "example": "file_deleted"
                },
                "message": {
                  "type": "string",
                  "example": "The file has been deleted."
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/StandardError"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/StandardError"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/StandardError"
            }
          }
        }
      }
    },
    "/file/{id}/download": {
      "get": {
        "tags": [
          "file"
        ],
        "summary": "Download a file.",
        "description": "Same as GET /file/{id}, but with File Transfer HTTP headers. Will trigger a save file dialog when opened in a web browser.  Also supports byte range requests.\n",
        "produces": [
          "application/octet-stream",
          "application/json"
        ],
        "parameters": [{
          "name": "id",
          "type": "string",
          "in": "path",
          "required": true,
          "description": "ID of the file to request"
        }],
        "responses": {
          "200": {
            "description": "A file output stream."
          },
          "default": {
            "description": "Error Response",
            "schema": {
              "$ref": "#/definitions/StandardError"
            }
          }
        }
      }
    },
    "/file/{id}/info": {
      "get": {
        "tags": [
          "file"
        ],
        "summary": "Retrieve information of a file.",
        "description": "Returns information about one or more files. You can also put a comma separated list of file IDs in the URL and it will return an array of file info, instead of a single object.\n",
        "operationId": "getFileInfo",
        "parameters": [{
          "name": "id",
          "type": "string",
          "in": "path",
          "required": true,
          "description": "ID(s) of the file"
        }],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "example": true
                },
                "id": {
                  "type": "string",
                  "description": "ID of the newly uploaded file",
                  "example": "abc123"
                },
                "file_name": {
                  "type": "string",
                  "description": "Name of the file",
                  "example": "screenshot.png"
                },
                "date_upload": {
                  "type": "number",
                  "description": "Timestamp of uploaded time",
                  "example": 1485894987
                },
                "date_last_view": {
                  "type": "number",
                  "description": "Timestamp of last viewed time",
                  "example": 1485894987
                },
                "file_size": {
                  "type": "number",
                  "description": "Size of the file in Bytes",
                  "example": 5694837
                },
                "views": {
                  "type": "number",
                  "description": "Amount of unique file views",
                  "example": 1234
                },
                "mime_type": {
                  "type": "string",
                  "description": "MIME type of the file",
                  "example": "image/png"
                },
                "description": {
                  "type": "string",
                  "description": "Description of the file",
                  "example": "File description"
                },
                "mime_image": {
                  "type": "string",
                  "description": "Image associated with the mime type",
                  "example": "http://pixeldra.in/res/img/mime/image-png.png"
                },
                "thumbnail": {
                  "type": "string",
                  "description": "Link to a thumbnail of this file",
                  "example": "http://pixeldra.in/api/thumbnail/123abc"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/StandardError"
            }
          }
        }
      }
    },
    "/file/{id}/thumbnail": {
      "get": {
        "tags": [
          "file"
        ],
        "summary": "Get a thumbnail image representing the file",
        "description": "Returns a PNG thumbnail image representing the file. The thumbnail is always 100*100 px. If the source file is parsable by imagemagick the thumbnail will be generated from the file, if not it will be a generic mime type icon.\n",
        "produces": [
          "image/png",
          "application/json"
        ],
        "parameters": [{
          "name": "id",
          "type": "string",
          "in": "path",
          "required": true,
          "description": "ID of the file to get a thumbnail for"
        }],
        "responses": {
          "200": {
            "description": "A PNG image of 100*100 px."
          },
          "default": {
            "description": "Error Response",
            "schema": {
              "$ref": "#/definitions/StandardError"
            }
          }
        }
      }
    },
    "/list": {
      "post": {
        "tags": [
          "list"
        ],
        "summary": "Creates a list of files that can be viewed together on the file viewer page.",
        "description": "Creates a list of files that can be viewed together on the file viewer page.",
        "operationId": "createFileList",
        "parameters": [{
          "name": "list",
          "in": "body",
          "required": true,
          "description": "POST body should be a JSON object, example below.  A list can contain maximally 5000 files. If you try to add more the request will fail.\n",
          "schema": {
            "type": "object",
            "required": [
              "title",
              "files"
            ],
            "properties": {
              "title": {
                "type": "string",
                "description": "Title of the list.",
                "example": "My beautiful photos"
              },
              "description": {
                "type": "string",
                "description": "Description of the list.",
                "example": "An album of photos from my vacation in Austria"
              },
              "files": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "ID of the file",
                      "example": "abc123"
                    },
                    "description": {
                      "type": "string",
                      "description": "Description of the file",
                      "example": "First photo of the week, such a beautiful valley"
                    }
                  }
                },
                "description": "Ordered array of files to add to the list",
                "example": [{
                    "id": "abc123",
                    "description": "First photo of the week, such a beautiful valley"
                  },
                  {
                    "id": "123abc",
                    "description": "The week went by so quickly, here's a photo from the plane back"
                  }
                ]
              }
            }
          }
        }],
        "responses": {
          "201": {
            "description": "List is created",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "example": true
                },
                "id": {
                  "type": "string",
                  "description": "ID of the newly created list",
                  "example": "yay137"
                }
              }
            }
          },
          "413": {
            "description": "Payload too large",
            "schema": {
              "$ref": "#/definitions/StandardError"
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "$ref": "#/definitions/StandardError"
            }
          }
        }
      }
    },
    "/list/{id}": {
      "get": {
        "tags": [
          "list"
        ],
        "summary": "Returns information about a file list and the files in it.",
        "description": "Returns information about a file list and the files in it.",
        "operationId": "getFileList",
        "parameters": [{
          "name": "id",
          "type": "string",
          "in": "path",
          "required": true,
          "description": "ID of the list"
        }],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "example": true
                },
                "id": {
                  "type": "string",
                  "example": "L8bhwx"
                },
                "title": {
                  "type": "string",
                  "example": "Rust in Peace"
                },
                "date_creqated": {
                  "type": "number",
                  "example": 1513033315
                },
                "files": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "detail_href": {
                        "type": "string",
                        "example": "/file/_SqVWi/info"
                      },
                      "id": {
                        "type": "string",
                        "example": "_SqVWi"
                      },
                      "file_name": {
                        "type": "string",
                        "example": "01 Holy Wars... The Punishment Due.mp3"
                      },
                      "description": {
                        "type": "string",
                        "example": ""
                      },
                      "date_created": {
                        "type": "number",
                        "example": 1513033304
                      },
                      "date_last_view": {
                        "type": "number",
                        "example": 1513033304
                      },
                      "list_description": {
                        "type": "string",
                        "example": ""
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/StandardError"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "StandardError": {
      "required": [
        "success",
        "value",
        "message"
      ],
      "properties": {
        "success": {
          "type": "boolean",
          "example": false
        },
        "id": {
          "type": "string",
          "example": "Oh42No"
        },
        "value": {
          "type": "string",
          "example": "writing"
        },
        "message": {
          "type": "string",
          "example": "Something went wrong while writing the file to disk, the server may be out of storage space."
        }
      }
    }
  }
}